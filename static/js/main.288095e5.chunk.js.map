{"version":3,"sources":["Alert.js","NumberOfEvents.js","CitySearch.js","Event.js","EventList.js","Login.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Alert","props","getStyle","color","className","style","this","text","Component","InfoAlert","WarningAlert","ErrorAlert","NumberOfEvents","state","numberOfEvents","errorText","handleChange","event","value","target","setState","updateEvents","type","onChange","CitySearch","query","suggestions","showSuggestions","locations","handleItemClicked","suggestion","infoText","filter","location","toUpperCase","indexOf","length","onFocus","display","map","onClick","Event","isExpanded","handleExpandEvent","renderExpandedComponent","href","htmlLink","rel","description","renderButtonText","formatTime","time","start","dateTime","formattedTime","moment","format","summary","EventList","events","id","Login","mockData","getEvents","a","NProgress","window","startsWith","done","extractLocations","getAccessToken","token","navigator","onLine","localStorage","getItem","JSON","parse","removeQuery","url","axios","get","result","data","setItem","stringify","Set","accessToken","checkToken","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","fetch","then","res","json","catch","error","encodeCode","encodeURIComponent","access_token","history","pushState","pathname","newurl","protocol","host","App","currentLocation","warningText","eventCount","response","slice","mounted","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","atatus","install","URL","process","origin","addEventListener","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.288095e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color\n    };\n  }\n\n  render() {\n    return (\n      <div className='Alert'>\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#4285f4';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#f0f8ff';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = '#c51f5d';\n  }\n}\n\nexport { InfoAlert, WarningAlert, ErrorAlert };","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: '24',\n    errorText: ''\n  };\n\n  // When user changes number value\n  handleChange = (event) => {\n    const value = event.target.value;\n\n    if (value < 0) {\n      this.setState({\n        errorText: 'Please enter a positive number of events.'\n      });\n    } else {\n      this.props.updateEvents(null, value);\n      this.setState({ numberOfEvents: value });\n    }\n  };\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className='NumberOfEvents'>\n        <label>Number of events</label>\n        <input\n          type='number'\n          className='number'\n          value={numberOfEvents}\n          onChange={this.handleChange}\n        />\n        <ErrorAlert text={this.state.errorText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: false,\n    locations: this.props.locations,\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n      infoText: ''\n    });\n    this.props.updateEvents(suggestion);\n  };\n\n  // Displays suggestions based on user input\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true})\n\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: `We can not find \"${value}\" you are looking for. Please try another city.`\n      });\n    } else {\n      this.setState({\n        query: value,\n        suggestions,\n        infoText: ''\n      });\n    }\n  };\n\n  render() {\n    const { query, suggestions, showSuggestions } = this.state;\n\n    return (\n      <div className='CitySearch'>\n        <InfoAlert text={this.state.infoText} />\n        <label>Choose your nearest city</label>\n        <input\n          type='text'\n          className='city'\n          value={query}\n          onChange={this.handleChange}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className='suggestions'\n          style={showSuggestions ? {} : { display: 'none' }}\n        >\n          {suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li key='all' onClick={() => this.handleItemClicked('all')}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Event extends Component {\n  state = {\n    isExpanded: false, // Event is collapsed by default\n  };\n\n  // Toggle expand/collapse event on click\n  handleExpandEvent = () => {\n    if (this.state.isExpanded === false) {\n      this.setState({\n        isExpanded: true,\n      });\n    } else {\n      this.setState({\n        isExpanded: false,\n      });\n    }\n  };\n\n  // The elements displayed when event is expanded\n  renderExpandedComponent = () => {\n    const { event } = this.props;\n\n    if (this.state.isExpanded) {\n      return (\n        <div className='Expanded-Event'>\n          <h4>About event:</h4>\n          <div className='link-container'>\n            <a\n              className='link'\n              href={event.htmlLink}\n              rel='noreferrer'\n              target='_blank'\n            >\n              See details on Google Calendar\n            </a>\n          </div>\n          <p className='description'>{event.description}</p>\n        </div>\n      );\n    }\n  };\n\n  // Toggles button text\n  renderButtonText = () => {\n    return !this.state.isExpanded ? 'Show details' : 'Hide details';\n  };\n\n  // Formats time data\n  formatTime = () => {\n    const time = this.props.event.start.dateTime;\n    const formattedTime = moment(time).format(\"dddd, MMMM Do YYYY, h:mm a\");\n    return <span className='start-dateTime'>{`${formattedTime}`}</span>\n  };\n\n  render() {\n    const { event } = this.props;\n\n    return (\n      <div className='event'>\n        <div className='heading'>\n          <h2 className='summary'>{event.summary}</h2>\n          <div className='subheading'>\n            <div className='time'>{this.formatTime()}</div>\n            <div className='location-container'>\n              <span className='summary-2'>@{event.summary} | </span>\n              <span className='location'>{event.location}</span>\n            </div>\n          </div>\n        </div>\n        <div>{this.renderExpandedComponent()}</div>\n        <button\n          type='button'\n          className='btn-details'\n          onClick={this.handleExpandEvent}\n        >\n          {this.renderButtonText()}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React from 'react';\nimport Event from './Event';\n\nconst EventList = ({ events }) => {\n  return (!events) ? null : (\n      <ul className='EventList'>\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n  )\n}\n\nexport default EventList;","import React from \"react\";\n\nfunction Login() {\n  return (\n    <div className='loginView'>\n      <h1>Welcome to the Meet app</h1>\n      <h4>\n        Log in to see upcoming events around the world for full-stack developers\n      </h4>\n      <div className='button_cont' align='center'>\n        <div className='google-btn'>\n          <div className='google-icon-wrapper'>\n            <img\n              className='google-icon'\n              src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n              alt='Google sign-in'\n            />\n          </div>\n          <a\n            className='btn-text'\n            href='https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar.readonly&response_type=code&client_id=599445530558-r804ljdavn98l072h16mrqdi22lv9q48.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fximnoise.github.io%2Fmeet'\n            rel='nofollow noopener'\n          >\n            <b>Sign in with google</b>\n          </a>\n        </div>\n      </div>\n      <a\n        className='btn-privacy'\n        href='https://ximnoise.github.io/meet/privacy.html'\n        rel='nofollow noopener'\n      >\n        Privacy policy\n      </a>\n    </div>\n  );\n}\n\n//\nexport default Login;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    }\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    }\n  }\n];\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n// *===== Data Retrieval Functions *===== //\nconst getEvents = async () => {\n  NProgress.start();\n\n  // Return mockData for local user\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData)};\n  }\n\n  const token = await getAccessToken();\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    NProgress.done();\n    return {\n      events: JSON.parse(events).events,\n      locations: extractLocations(JSON.parse(events).events)\n    };\n  }\n\n  // Calls API to retrieve events data\n  if (token) {\n    removeQuery();\n    const url = `https://yib3acn0wb.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events, locations };\n  }\n};\n\nconst extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n// *===== Authentication & Authorization Functions =====* //\nconst getAccessToken = async () => {\n  // Looks for pre-existing token in storage & check validity\n  const accessToken = await localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  // If no token or invalid token, retrieve new token through google authorization\n  if (!accessToken || !tokenCheck) {\n    await localStorage.removeItem('access_token'); // Remove invalid token\n\n    // Look for authorization code\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n\n    // If no auth code, redirect to Google Auth screen to sign in and retrieve code\n    if (!code) {\n      const results = await axios.get(\n        'https://yib3acn0wb.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\n// Checks validity of access token\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result.error ? false : true;\n};\n\n// Gets new token from AWS Lamba if there is no token or invalid token\nconst getToken = async (code) => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://yib3acn0wb.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n\n// Removes code from URL after it is used\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport {\n  getEvents,\n  getAccessToken,\n  extractLocations,\n  removeQuery,\n  checkToken,\n  getToken,\n};\n\n\n","import React, { Component } from 'react';\nimport NumberOfEvents from './NumberOfEvents';\nimport CitySearch from './CitySearch';\nimport EventList from './EventList';\nimport Login from './Login';\nimport { getEvents, checkToken } from './api';\nimport { WarningAlert } from './Alert';\nimport './styles/App.scss';\nimport './styles/nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    numberOfEvents: '24',\n    tokenCheck: false,\n    warningText: ''\n  };\n  // numberOfEvents uses a string to prevent type conversion\n\n  async componentDidMount() {\n    this.mounted = true;\n    if (!navigator.onLine) {\n      this.setState({\n        warningText: 'You are currently offline and the app shows the data from your last visit. Data will not be up-to-date.'\n      });\n    } else {\n      this.setState({\n        warningText: ''\n      });\n    }\n\n    if (this.mounted) {\n      this.updateEvents();\n    }\n\n    /*\n    const accessToken = localStorage.getItem('access_token');\n    const validToken = accessToken !== null ? await checkToken(accessToken) : false;\n    this.setState({ tokenCheck: validToken });\n    if (validToken === true) this.updateEvents()\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n\n    if (code && this.mounted === true && validToken === false) {\n      this.setState({ tokenCheck: true });\n      this.updateEvents();\n    }\n\n    getEvents().then((response) => {\n      if (this.mounted) {\n        this.setState({\n          events: response.events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(response.events),\n        });\n      }\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  // Filters events based on location and number given in user input\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n\n    this.setState({ warningText: 'Please wait, events are loading...' });\n\n    // If user selects a location from input\n    if (location) {\n      getEvents().then((response) => {\n        // Applies new filter for location\n        const locationEvents =\n          location === 'all'\n            ? response.events\n            : response.events.filter((event) => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: events,\n          currentLocation: location,\n          locations: response.locations,\n          warningText: ''\n        });\n      });\n    } else {\n      getEvents().then((response) => {\n        // Persists location filter from state\n        const locationEvents =\n          currentLocation === 'all'\n            ? response.events\n            : response.events.filter(\n                (event) => event.location === currentLocation\n              );\n        const events = locationEvents.slice(0, eventCount);\n        return this.setState({\n          events: events,\n          numberOfEvents: eventCount,\n          locations: response.locations,\n          warningText: ''\n        });\n      });\n    }\n  };\n\n  render() {\n    const { numberOfEvents, events, locations, tokenCheck } = this.state;\n\n    return (\n      <div className='App'>\n        <h1>Meet App</h1>\n        <CitySearch\n          locations={locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          numberOfEvents={numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <WarningAlert text={this.state.warningText} />\n        <EventList events={events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*tokenCheck === false ? (\n  <div className=\"App\">\n    <Login />\n  </div>\n) : */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\natatus.config('aed2091d51704321bb224f67207390e8').install();\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}