[{"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/index.js":"1","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/App.js":"2","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/reportWebVitals.js":"3","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/CitySearch.js":"4","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/NumberOfEvents.js":"5","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/EventList.js":"6","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/Event.js":"7","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/api.js":"8","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/mock-data.js":"9"},{"size":500,"mtime":1611052026750,"results":"10","hashOfConfig":"11"},{"size":1213,"mtime":1612282179332,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611052026750,"results":"13","hashOfConfig":"11"},{"size":1533,"mtime":1612280305766,"results":"14","hashOfConfig":"11"},{"size":701,"mtime":1612275899323,"results":"15","hashOfConfig":"11"},{"size":366,"mtime":1611765383296,"results":"16","hashOfConfig":"11"},{"size":1180,"mtime":1612275756887,"results":"17","hashOfConfig":"11"},{"size":3124,"mtime":1612362939909,"results":"18","hashOfConfig":"11"},{"size":3063,"mtime":1611858482871,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ndlmqj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/index.js",[],["40","41"],"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/App.js",[],"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/reportWebVitals.js",[],"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/CitySearch.js",[],"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/NumberOfEvents.js",[],"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/EventList.js",[],"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/Event.js",[],"/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/api.js",["42","43"],"import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n export const extractLocations = (events) => {\n   var extractLocations = events.map((event) => event.location);\n   var locations = [...new Set(extractLocations)];\n   return locations;\n };\n\n const checkToken = async (accessToken) => {\n   const result = await fetch(\n     `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n };\n\n export const getEvents = async () => {\n   NProgress.start();\n\n   if (window.location.href.startsWith('http://localhost')) {\n     NProgress.done();\n     return mockData;\n   }\n\n   const token = await getAccessToken();\n\n   if (token) {\n     removeQuery();\n     const url = 'https://yib3acn0wb.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n     const result = await axios.get(url);\n     if (result.data) {\n       var locations = extractLocations(result.data.events);\n       localStorage.setItem('lastEvents', JSON.stringify(result.data));\n       localStorage.setItem('locations', JSON.stringify(locations));\n     }\n     NProgress.done();\n     return result.data.events;\n   }\n };\n\n const removeQuery = () => {\n   if (window.history.pushState && window.location.pathname) {\n     var newUrl =\n        window.location.protocol +\n        '//' +\n        window.location.host +\n        window.location.pathname;\n      window.history.pushState('', '', newUrl);\n   } else {\n     newUrl = window.location.protocol + '//' + window.location.host;\n     window.history.pushState('', '', newUrl);\n   }\n };\n\n export const getAccessToken = async () => {\n   const accessToken = localStorage.getItem('access_token');\n\n   const tokenCheck = accessToken && (await checkToken(accessToken));\n\n   if (!accessToken || tokenCheck.error) {\n     await localStorage.removeItem('access_token');\n     const searchParams = new URLSearchParams(window.location.search);\n     const code = await searchParams.get('code');\n     if (!code) {\n       const results = await axios.get('https://yib3acn0wb.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url');\n       const { authUrl } = results.data;\n       return (window.location.href = authUrl);\n     }\n     return code && getToken(code);\n   }\n   return accessToken;\n };\n\n const getToken = async (code) => {\n   const encodeCode = encodeURIComponent(code);\n   const { access_Token } = await fetch('https://yib3acn0wb.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode)\n   .then((res) => {\n     return res.json();\n    })\n   .catch((error) => error);\n\n   access_Token && localStorage.setItem('access_token', access_Token);\n\n   return access_Token;\n };\n","/Users/ximnoise/Dev/CareerFoundry/BackendCourse/meet/src/mock-data.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":42,"column":97,"nodeType":"50","messageId":"51","endLine":42,"endColumn":98},{"ruleId":"48","severity":1,"message":"49","line":89,"column":115,"nodeType":"50","messageId":"51","endLine":89,"endColumn":116},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]